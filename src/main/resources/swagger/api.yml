openapi: 3.0.1
info:
  title: Task Management API v1
  description: |-
    This API exposes RESTful CRUD operations for tracking tasks.

    Some useful links:
    - [Web UI](https://justluxurylifestyle.com/app/open-tasks)
    - [GitHUb source code](https://github.com/fahrican/get-things-done-api)
  license:
    name: MIT License
    url: https://github.com/fahrican/get-things-done-api/LICENSE.txt
  version: 1.0.0
servers:
  - url: http://localhost:9091
    description: Generated server url
paths:
  /api/v1/tasks:
    get:
      tags:
        - task
      summary: Get all tasks
      operationId: getTasks
      parameters:
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - OPEN
              - CLOSED
      responses:
        '200':
          description: all open & closed tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskFetchResponse'
        '400':
          description: Bad Request
    post:
      tags:
        - task
      summary: Create a new task
      operationId: createTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreateRequest'
        required: true
      responses:
        '201':
          description: Task successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskFetchResponse'
        '400':
          description: Invalid input
  /api/v1/tasks/{id}:
    get:
      tags:
        - task
      summary: Get task by its ID
      operationId: getTaskById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Found the task by the supplied ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskFetchResponse'
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found
    delete:
      tags:
        - task
      summary: Delete a task by its ID
      operationId: deleteTask
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Task successfully deleted
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found
    patch:
      tags:
        - task
      summary: Update an existing task
      operationId: updateTask
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdateRequest'
        required: true
      responses:
        '200':
          description: Task successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskFetchResponse'
        '400':
          description: Invalid input
        '404':
          description: Task not found
components:
  schemas:
    TaskCreateRequest:
      required:
        - description
        - isReminderSet
        - isTaskOpen
        - priority
        - timeInterval
      type: object
      properties:
        description:
          maxLength: 255
          minLength: 3
          type: string
        isReminderSet:
          type: boolean
        isTaskOpen:
          type: boolean
        startedOn:
          type: string
          format: date-time
        finishedOn:
          type: string
          format: date-time
        timeInterval:
          type: string
        timeTaken:
          type: integer
          format: int32
        priority:
          type: string
          enum:
            - LOW
            - MEDIUM
            - HIGH
    TaskFetchResponse:
      required:
        - createdOn
        - description
        - isReminderSet
        - isTaskOpen
        - priority
        - timeInterval
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        isReminderSet:
          type: boolean
        isTaskOpen:
          type: boolean
        createdOn:
          type: string
          format: date-time
        startedOn:
          type: string
          format: date-time
        finishedOn:
          type: string
          format: date-time
        timeInterval:
          type: string
        timeTaken:
          type: integer
          format: int32
        priority:
          type: string
          enum:
            - LOW
            - MEDIUM
            - HIGH
    TaskUpdateRequest:
      type: object
      properties:
        description:
          type: string
        isReminderSet:
          type: boolean
        isTaskOpen:
          type: boolean
        startedOn:
          type: string
          format: date-time
        finishedOn:
          type: string
          format: date-time
        timeInterval:
          type: string
        timeTaken:
          type: integer
          format: int32
        priority:
          type: string
          enum:
            - LOW
            - MEDIUM
            - HIGH
