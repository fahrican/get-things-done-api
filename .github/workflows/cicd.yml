name: Build & Deployment

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  validate:
    name: Validate Code Base
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-22.04
    steps:
      - name: Run Super-Linter
        uses: super-linter/super-linter@v5.7.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_MARKDOWN: false
          VALIDATE_SQLFLUFF: false

      - name: Super Linter Slack Notification
        uses: 8398a7/action-slack@v3.16.2
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: 'Super Linter finished... :eyes: اجل '
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  test:
    name: Run All Tests
    if: github.event_name == 'pull_request'
    needs: validate
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 19
        uses: actions/setup-java@v4.5.0
        with:
          distribution: 'corretto'
          java-version: 19

      - name: Cache SonarCloud packages
        uses: actions/cache@v4.2.0
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Sonar Cloud Slack Notification
        uses: 8398a7/action-slack@v3.16.2
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: 'Sonar Cloud check started... :cloud: لطيف'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Cache Gradle packages
        uses: actions/cache@v4.2.0
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_ORG: ${{ secrets.SONAR_ORG }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
        run: ./gradlew build sonarqube --info

      - name: Slack Notification Ci/Cd started
        uses: 8398a7/action-slack@v3.16.2
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: 'CI/CD started... :hut: بسم الله الرحمن الرحيم'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  build:
    name: Build Project
    if: github.event_name == 'push'
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v3.5.0

      - name: Login to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Hub Slack Notification
        uses: 8398a7/action-slack@v3.16.2
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: 'Docker Hub Login... :lock: طيب'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6.10.0
        with:
          push: true
          tags: fahrican/get-things-done-api:${{ github.sha }}
          context: .

      - name: Notify Docker push results
        uses: 8398a7/action-slack@v3.16.2
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: ':white_check_mark: pushed image fahrican/get-things-done-api to Docker Hub... https://hub.docker.com/repository/docker/fahrican/get-things-done-api'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy:
    name: Deploy Project
    if: github.event_name == 'push'
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Notify deployment started
        uses: 8398a7/action-slack@v3.16.2
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: 'Digital Ocean deployment started... :crossed_fingers: ان شاء الله خير'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to Droplet
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.DROPLET_PORT }} ${{ secrets.DEPLOYMENT_USER }}@${{ secrets.DEPLOYMENT_HOST }} "\
            export BUILD_VERSION=${{ github.sha }} && \
            docker compose pull && \
            docker compose up -d && \
            docker system prune -af"

      - name: Notify deployment results
        uses: 8398a7/action-slack@v3.16.2
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: 'Digital Ocean deployment finished... :rocket: :palms_up_together: ٱلْحَمْدُ لِلَّٰهِ'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}